name: Reusable Deploy Workflow

on:
  workflow_call:
    inputs:
      app_name:
        required: true
        type: string
        description: "Application name used for deployment path"
      service_name:
        required: false
        type: string
        description: "Service name to restart (defaults to app_name)"
      deploy_backend:
        required: false
        type: boolean
        default: false
        description: "Whether to deploy the backend"
      backend_setup_command:
        required: false
        type: string
        default: "mise x -- uv sync --inexact"
        description: "Command to run after backend deployment"
      frontend_dist_path:
        required: false
        type: string
        default: "dist/index.html"
        description: "Path to the frontend dist files to deploy"
      frontend_target_path:
        required: false
        type: string
        default: "src"
        description: "Target path for frontend files on server"
    secrets:
      SSH_PRIVATE_KEY:
        required: true
      DEPLOY_HOST:
        required: true
      DEPLOY_USER:
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            ~/.pnpm-store
            node_modules
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-
      - uses: jdx/mise-action@v2
        with:
          experimental: true
      - run: pnpm install
      - run: pnpm build

      - uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - run: |
          mkdir -p ~/.ssh
          ssh-keyscan ${{ secrets.DEPLOY_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy backend
        if: inputs.deploy_backend
        run: |
          git archive HEAD | ssh ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }} '
            cd /srv/apps/${{ inputs.app_name }}/
            tar -xf -
            ${{ inputs.backend_setup_command }}
          '

      - name: Deploy frontend
        if: inputs.frontend_dist_path != ''
        run: |
          scp -C -r ${{ inputs.frontend_dist_path }} ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }}:/srv/apps/${{ inputs.app_name }}/${{ inputs.frontend_target_path }}

      - name: Restart service
        if: inputs.deploy_backend
        run: |
          ssh ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }} 'sudo service ${{ inputs.service_name || inputs.app_name }} restart'
